<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.shop.dao.OrderDao">

    <resultMap type="com.it.shop.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="date" column="date" jdbcType="TIMESTAMP"/>
        <result property="iphone" column="iphone" jdbcType="VARCHAR"/>
        <result property="gid" column="gid" jdbcType="INTEGER"/>

        <collection property="user" ofType="com.it.shop.entity.User" resultMap="UserMap"/>
        <collection property="goods" ofType="com.it.shop.entity.Goods" resultMap="GoodsMap"/>
        <collection property="type" ofType="com.it.shop.entity.Type" resultMap="TypeMap"/>
        <collection property="car" ofType="com.it.shop.entity.Car" resultMap="CarMap"/>

        
    </resultMap>
    <resultMap type="com.it.shop.entity.Goods" id="GoodsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="gname" jdbcType="VARCHAR"/>
        <result property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
    </resultMap>

    <resultMap type="com.it.shop.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="pwd" column="pwd" jdbcType="VARCHAR"/>
        <result property="money" column="money" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.it.shop.entity.Type" id="TypeMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="tname" column="tname" jdbcType="VARCHAR"/>
    </resultMap>
    
    <resultMap type="com.it.shop.entity.Car" id="CarMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="gid" column="gid" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="weight" column="weight" jdbcType="DOUBLE"/>
    </resultMap>
    
    <!--查询单个-->
    <select id="quryByParam" resultMap="OrderMap">
        select
        `order`.id, `order`.uid, `order`.address, `order`.date, `order`.iphone, `order`.gid,

        `user`.id,`user`.name,
        `goods`.id,`goods`.name gname,
        `goods`.id,`goods`.price,
        `type`.id,`type`.tname,
        `car`.id,`car`.weight

        from `order`
        LEFT JOIN `user`
        on `order`.uid=`user`.id
        LEFT JOIN goods
        on `order`.gid=goods.id
        LEFT JOIN type
        on `goods`.tid=type.id
        LEFT JOIN car
        on `car`.gid=goods.id
        <where>
            <if test="id != null">
                and `order`.id = #{id}
            </if>
            <if test="uid != null">
                and `order`.uid = #{uid}
            </if>
            <if test="address != null and address != ''">
                and `order`.address = #{address}
            </if>
            <if test="date != null">
                and `order`.date = #{date}
            </if>
            <if test="iphone != null and iphone != ''">
                and `order`.iphone = #{iphone}
            </if>
            <if test="gid != null">
                and `order`.gid = #{gid}
            </if>

        </where>
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderMap">
        select
        id, uid, address, date, iphone, gid
        from order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
            <if test="iphone != null and iphone != ''">
                and iphone = #{iphone}
            </if>
            <if test="gid != null">
                and gid = #{gid}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
            <if test="iphone != null and iphone != ''">
                and iphone = #{iphone}
            </if>
            <if test="gid != null">
                and gid = #{gid}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into `order` (uid, address, date, iphone, gid)
        values (#{uid}, #{address}, #{date}, #{iphone}, #{gid})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into order(uid, address, date, iphone, gid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uid}, #{entity.address}, #{entity.date}, #{entity.iphone}, #{entity.gid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into order(uid, address, date, iphone, gid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uid}, #{entity.address}, #{entity.date}, #{entity.iphone}, #{entity.gid})
        </foreach>
        on duplicate key update
        uid = values(uid),
        address = values(address),
        date = values(date),
        iphone = values(iphone),
        gid = values(gid)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update order
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="date != null">
                date = #{date},
            </if>
            <if test="iphone != null and iphone != ''">
                iphone = #{iphone},
            </if>
            <if test="gid != null">
                gid = #{gid},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from order where id = #{id}
    </delete>


   
</mapper>

